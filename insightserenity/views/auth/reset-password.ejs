<% layout('layouts/auth') -%>
<% block('title', 'Reset Password - InsightSerenity') -%>

<div class="text-center md:text-left">
    <h1 class="text-2xl font-bold text-gray-800 mb-1">Reset Your Password</h1>
    <p class="text-gray-600 mb-6">Create a new, strong password for your account</p>
</div>

<!-- Reset Password Form -->
<form action="/api/auth/reset-password" method="POST" class="space-y-6">
    <input type="hidden" name="token" value="<%= token %>">
    
    <div class="mb-4">
        <label for="password" class="block text-sm font-medium text-gray-700 mb-1">New Password</label>
        <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <i data-lucide="lock" class="h-5 w-5 text-gray-400"></i>
            </div>
            <input type="password" id="password" name="password" required
                class="pl-10 w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary"
                placeholder="Create a new password">
            <div class="absolute inset-y-0 right-0 pr-3 flex items-center cursor-pointer" id="togglePassword">
                <i data-lucide="eye" class="h-5 w-5 text-gray-400"></i>
            </div>
        </div>
        <p class="mt-1 text-xs text-gray-500">
            Must be at least 8 characters with uppercase, lowercase, number and special character.
        </p>
    </div>
    
    <div class="mb-4">
        <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">Confirm Password</label>
        <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <i data-lucide="lock" class="h-5 w-5 text-gray-400"></i>
            </div>
            <input type="password" id="confirmPassword" name="confirmPassword" required
                class="pl-10 w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary"
                placeholder="Confirm your new password">
            <div class="absolute inset-y-0 right-0 pr-3 flex items-center cursor-pointer" id="toggleConfirmPassword">
                <i data-lucide="eye" class="h-5 w-5 text-gray-400"></i>
            </div>
        </div>
    </div>
    
    <!-- Password strength meter -->
    <div class="mb-4">
        <p class="block text-sm font-medium text-gray-700 mb-1">Password Strength</p>
        <div class="h-2 w-full bg-gray-200 rounded-full overflow-hidden">
            <div id="passwordStrength" class="h-full bg-gray-400 transition-all duration-300" style="width: 0%"></div>
        </div>
        <p id="passwordStrengthText" class="mt-1 text-xs text-gray-500">Enter a password to see strength</p>
    </div>
    
    <div>
        <button type="submit" id="resetButton" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-base font-medium text-dark bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
            Reset Password
        </button>
    </div>
    
    <div class="text-center mt-6">
        <p class="text-sm text-gray-600">
            <a href="/api/auth/login" class="font-medium text-primary-dark hover:text-primary">
                Back to login
            </a>
        </p>
    </div>
</form>

<% block('additionalJS', `
<script>
    // Toggle password visibility
    document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordInput = document.getElementById('password');
        const icon = this.querySelector('i');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.setAttribute('data-lucide', 'eye-off');
        } else {
            passwordInput.type = 'password';
            icon.setAttribute('data-lucide', 'eye');
        }
        
        lucide.createIcons();
    });
    
    // Toggle confirm password visibility
    document.getElementById('toggleConfirmPassword').addEventListener('click', function() {
        const passwordInput = document.getElementById('confirmPassword');
        const icon = this.querySelector('i');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.setAttribute('data-lucide', 'eye-off');
        } else {
            passwordInput.type = 'password';
            icon.setAttribute('data-lucide', 'eye');
        }
        
        lucide.createIcons();
    });
    
    // Password strength meter
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const strengthBar = document.getElementById('passwordStrength');
    const strengthText = document.getElementById('passwordStrengthText');
    const resetButton = document.getElementById('resetButton');
    
    passwordInput.addEventListener('input', function() {
        const password = this.value;
        let strength = 0;
        let message = '';
        
        // Length check
        if (password.length >= 8) {
            strength += 25;
        }
        
        // Uppercase check
        if (/[A-Z]/.test(password)) {
            strength += 25;
        }
        
        // Lowercase check
        if (/[a-z]/.test(password)) {
            strength += 25;
        }
        
        // Number and special character check
        if (/[0-9]/.test(password) && /[!@#$%^&*]/.test(password)) {
            strength += 25;
        }
        
        // Update strength meter
        strengthBar.style.width = strength + '%';
        
        // Update strength message and color
        if (strength === 0) {
            strengthBar.className = 'h-full bg-gray-400 transition-all duration-300';
            message = 'Enter a password to see strength';
        } else if (strength <= 25) {
            strengthBar.className = 'h-full bg-red-500 transition-all duration-300';
            message = 'Very weak';
        } else if (strength <= 50) {
            strengthBar.className = 'h-full bg-orange-500 transition-all duration-300';
            message = 'Weak';
        } else if (strength <= 75) {
            strengthBar.className = 'h-full bg-yellow-500 transition-all duration-300';
            message = 'Moderate';
        } else {
            strengthBar.className = 'h-full bg-green-500 transition-all duration-300';
            message = 'Strong';
        }
        
        strengthText.textContent = message;
        
        // Validate matching passwords
        validatePasswords();
    });
    
    confirmPasswordInput.addEventListener('input', validatePasswords);
    
    function validatePasswords() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        
        if (confirmPassword && password !== confirmPassword) {
            confirmPasswordInput.classList.add('border-red-500');
            confirmPasswordInput.classList.remove('border-green-500');
            resetButton.disabled = true;
        } else if (confirmPassword) {
            confirmPasswordInput.classList.remove('border-red-500');
            confirmPasswordInput.classList.add('border-green-500');
            resetButton.disabled = false;
        } else {
            confirmPasswordInput.classList.remove('border-red-500', 'border-green-500');
            resetButton.disabled = false;
        }
    }
    
    // Form validation
    document.querySelector('form').addEventListener('submit', function(e) {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        
        if (password !== confirmPassword) {
            e.preventDefault();
            alert('Passwords do not match!');
            return false;
        }
        
        // Check password strength
        if (password.length < 8 || 
            !/[A-Z]/.test(password) || 
            !/[a-z]/.test(password) || 
            !/[0-9]/.test(password) || 
            !/[!@#$%^&*]/.test(password)) {
            
            e.preventDefault();
            alert('Password does not meet security requirements. Please ensure it has at least 8 characters, including uppercase, lowercase, number, and special character.');
            return false;
        }
        
        return true;
    });
</script>
`) -%>